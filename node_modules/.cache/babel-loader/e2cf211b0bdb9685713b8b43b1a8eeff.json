{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SpiderQshka\\\\Documents\\\\GitHub\\\\ReactProject\\\\react-project\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"; // import Card from './Card';\n\nimport Index from './Index';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      response: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://api.openweathermap.org/data/2.5/forecast?q=Minsk&APPID=6132c3489f0e8f14f8be55cd68ff7506').then(response => {\n      return response.json();\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    }).then(JsonResponse => {\n      this.setState({\n        isLoaded: true,\n        response: JsonResponse\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          response = _this$state.response;\n\n    if (error) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"spinner-border text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    } else {\n      return (// <Router>\n        //   <div>\n        //     <Route path=\"/\" exact render={() => <Index data={response} />} />\n        //     {/* <Route path=\"/\" exact render={() => <Card data={response.list[0]} />} /> */}\n        //   </div>\n        // </Router>\n        React.createElement(\"div\", {\n          className: \" h-100\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"1\")))\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\SpiderQshka\\Documents\\GitHub\\ReactProject\\react-project\\src\\components\\App.js"],"names":["React","BrowserRouter","Router","Route","Link","Index","App","Component","constructor","props","state","error","isLoaded","response","componentDidMount","fetch","then","json","setState","JsonResponse","render","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAiC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,gGAAD,CAAL,CACGC,IADH,CACQH,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACI,IAAT,EAAP;AACD,KAHH,EAIEN,KAAK,IAAI;AACP,WAAKO,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KATH,EAUGK,IAVH,CAUQG,YAAY,IAAI;AACpB,WAAKD,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,QAAQ,EAAEM;AAFE,OAAd;AAID,KAfH;AAgBD;;AAEDC,EAAAA,MAAM,GAAE;AAAA,wBAC8B,KAAKV,KADnC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBC,QADlB,eACkBA,QADlB;;AAGN,QAAIF,KAAJ,EAAU;AACR,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAYA,KAAK,CAACU,OAAlB,CAAP;AACD,KAFD,MAGK,IAAI,CAACT,QAAL,EAAc;AACjB,aAAO;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B;AAAK,QAAA,KAAK,EAAC,0BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7B,CAAP;AACD,KAFI,MAGD;AACF,aACE;AACA;AACA;AACA;AACA;AACA;AACA;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAPF;AAaD;AACF;;AArD6C","sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n// import Card from './Card';\r\nimport Index from './Index';\r\n\r\nexport default class App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      response: null\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('http://api.openweathermap.org/data/2.5/forecast?q=Minsk&APPID=6132c3489f0e8f14f8be55cd68ff7506')\r\n      .then(response => {\r\n        return response.json();\r\n      },\r\n      error => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n      })\r\n      .then(JsonResponse => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          response: JsonResponse\r\n        })\r\n      })\r\n  }\r\n\r\n  render(){\r\n    const {error, isLoaded, response} = this.state;\r\n\r\n    if (error){\r\n      return <h1>Error: {error.message}</h1>\r\n    }\r\n    else if (!isLoaded){\r\n      return <div className='text-center'><div class=\"spinner-border text-info\"></div></div>\r\n    }\r\n    else{\r\n      return (\r\n        // <Router>\r\n        //   <div>\r\n        //     <Route path=\"/\" exact render={() => <Index data={response} />} />\r\n        //     {/* <Route path=\"/\" exact render={() => <Card data={response.list[0]} />} /> */}\r\n        //   </div>\r\n        // </Router>\r\n        <div className=' h-100'>\r\n          <div className='row'>\r\n            <div className='column'>1</div>\r\n          </div>\r\n        </div>   \r\n      )\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}