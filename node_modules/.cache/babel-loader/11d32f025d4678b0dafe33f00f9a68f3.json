{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SpiderQshka\\\\Documents\\\\GitHub\\\\ReactProject\\\\react-project\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Index from './Index';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isComponentActive: false,\n      city: '',\n      date: '',\n      time: '',\n      error: null,\n      isLoaded: false,\n      response: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.setState({\n      isComponentActive: true\n    });\n    console.log(this.state);\n  }\n\n  componentDidUpdate() {\n    const _this$state = this.state,\n          city = _this$state.city,\n          date = _this$state.date,\n          time = _this$state.time;\n    const url = \"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&APPID=6132c3489f0e8f14f8be55cd68ff7506\");\n    fetch(url).then(response => {\n      return response.json();\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    }).then(JsonResponse => {\n      this.setState({\n        isLoaded: true,\n        response: JsonResponse\n      });\n    });\n  }\n\n  render() {\n    let component = null;\n    const _this$state2 = this.state,\n          error = _this$state2.error,\n          isLoaded = _this$state2.isLoaded,\n          response = _this$state2.response;\n\n    if (error) {\n      component = React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      component = React.createElement(\"div\", {\n        className: \"text-center m-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"spinner-border text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    } else if (response.cod !== '200') {\n      component = React.createElement(\"h1\", {\n        className: \"text-center display-4 m-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Cod \", response.cod, \": \", response.message);\n    }\n\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Week weather forecast\"), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"City, date and time\")), React.createElement(\"input\", {\n      type: \"text\",\n      \"aria-label\": \"city\",\n      className: \"form-control\",\n      onChange: e => this.setState({\n        city: e.target.value\n      }),\n      value: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      \"aria-label\": \"date\",\n      className: \"form-control\",\n      onChange: e => this.setState({\n        date: e.target.value\n      }),\n      value: this.state.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      \"aria-label\": \"time\",\n      className: \"form-control\",\n      onChange: e => this.setState({\n        time: e.target.value\n      }),\n      value: this.state.time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary btn-block mt-4\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Find!\"), component && React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => React.createElement(Index, {\n        data: this.state.response,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\SpiderQshka\\Documents\\GitHub\\ReactProject\\react-project\\src\\components\\App.js"],"names":["React","BrowserRouter","Router","Route","Link","Index","App","Component","constructor","props","state","isComponentActive","city","date","time","error","isLoaded","response","handleClick","bind","e","preventDefault","setState","console","log","componentDidUpdate","url","fetch","then","json","JsonResponse","render","component","message","cod","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Index from './Index';\r\n\r\nexport default class App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      isComponentActive: false,\r\n      city: '',\r\n      date: '',\r\n      time: '',\r\n      error: null,\r\n      isLoaded: false,\r\n      response: null\r\n    }\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e){\r\n    e.preventDefault();\r\n    \r\n    this.setState({\r\n      isComponentActive: true\r\n    })\r\n\r\n    console.log(this.state)\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    const {city, date, time} = this.state;\r\n    const url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=6132c3489f0e8f14f8be55cd68ff7506`;\r\n\r\n    fetch(url)\r\n      .then(response => {\r\n        return response.json();\r\n      },\r\n      error => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n      })\r\n      .then(JsonResponse => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          response: JsonResponse\r\n        })\r\n      })\r\n  }\r\n\r\n  render(){\r\n    let component = null;\r\n    const {error, isLoaded, response} = this.state;\r\n\r\n    if (error){\r\n      component = <h1>Error: {error.message}</h1>\r\n    }\r\n\r\n    else if (!isLoaded){\r\n      component = <div className='text-center m-4'><div className=\"spinner-border text-info\"></div></div>\r\n    }\r\n\r\n    else if (response.cod !== '200'){\r\n      component = <h1 className='text-center display-4 m-4'>Cod {response.cod}: {response.message}</h1>\r\n    }\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <h1 className='text-center display-4'>Week weather forecast</h1>\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">City, date and time</span>\r\n            </div>\r\n            <input type=\"text\" aria-label=\"city\" className=\"form-control\" onChange={(e) => this.setState({city: e.target.value})} value={this.state.city}/>\r\n            <input type=\"text\" aria-label=\"date\" className=\"form-control\" onChange={(e) => this.setState({date: e.target.value})} value={this.state.date}/>\r\n            <input type=\"text\" aria-label=\"time\" className=\"form-control\" onChange={(e) => this.setState({time: e.target.value})} value={this.state.time}/>\r\n          </div>\r\n          <button type=\"button\" className=\"btn btn-primary btn-block mt-4\" onClick={this.handleClick}>Find!</button>\r\n          {component && \r\n            <Route path=\"/\" exact render={() => <Index data={this.state.response} />} />\r\n          }\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}