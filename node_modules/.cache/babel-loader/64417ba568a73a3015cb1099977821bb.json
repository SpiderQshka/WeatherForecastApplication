{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SpiderQshka\\\\Documents\\\\GitHub\\\\ReactProject\\\\react-project\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Index from './Index';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: null,\n      date: null,\n      time: null,\n      error: null,\n      isLoaded: false,\n      response: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    const url = \"http://api.openweathermap.org/data/2.5/forecast/daily?q=\".concat(this.state.city, \"&APPID=6132c3489f0e8f14f8be55cd68ff7506\");\n    fetch(url).then(response => {\n      return response.json();\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    }).then(JsonResponse => {\n      this.setState({\n        isLoaded: true,\n        response: JsonResponse\n      });\n    });\n  } // componentDidMount(){\n  //   fetch('http://api.openweathermap.org/data/2.5/forecast?q=Minsk&APPID=6132c3489f0e8f14f8be55cd68ff7506')\n  //     .then(response => {\n  //       return response.json();\n  //     },\n  //     error => {\n  //       this.setState({\n  //         isLoaded: true,\n  //         error\n  //       });\n  //     })\n  //     .then(JsonResponse => {\n  //       this.setState({\n  //         isLoaded: true,\n  //         response: JsonResponse\n  //       })\n  //     })\n  // }\n\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          response = _this$state.response; // if (error){\n    //   return <h1>Error: {error.message}</h1>\n    // }\n    // else if (!isLoaded){\n    //   return <div className='text-center'><div className=\"spinner-border text-info\"></div></div>\n    // }\n    // else{\n\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Week weather forecast\"), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"City, date and time\")), React.createElement(\"input\", {\n      type: \"text\",\n      \"aria-label\": \"city\",\n      className: \"form-control\",\n      onChange: e => this.setState({\n        city: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      \"aria-label\": \"date\",\n      className: \"form-control\",\n      onChange: e => this.setState({\n        date: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      \"aria-label\": \"time\",\n      className: \"form-control\",\n      onChange: e => this.setState({\n        time: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary btn-block mt-4\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Find!\"), this.state.response && React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => React.createElement(Index, {\n        data: response,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  } // }\n\n\n}","map":{"version":3,"sources":["C:\\Users\\SpiderQshka\\Documents\\GitHub\\ReactProject\\react-project\\src\\components\\App.js"],"names":["React","BrowserRouter","Router","Route","Link","Index","App","Component","constructor","props","state","city","date","time","error","isLoaded","response","handleClick","bind","e","preventDefault","url","fetch","then","json","setState","JsonResponse","render","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Index from './Index';\r\n\r\nexport default class App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      city: null,\r\n      date: null,\r\n      time: null,\r\n      error: null,\r\n      isLoaded: false,\r\n      response: null,\r\n    }\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e){\r\n    e.preventDefault();\r\n    const url = `http://api.openweathermap.org/data/2.5/forecast/daily?q=${this.state.city}&APPID=6132c3489f0e8f14f8be55cd68ff7506`;\r\n\r\n    fetch(url)\r\n      .then(response => {\r\n        return response.json();\r\n      },\r\n      error => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n      })\r\n      .then(JsonResponse => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          response: JsonResponse\r\n        })\r\n      })\r\n  }\r\n\r\n  // componentDidMount(){\r\n  //   fetch('http://api.openweathermap.org/data/2.5/forecast?q=Minsk&APPID=6132c3489f0e8f14f8be55cd68ff7506')\r\n  //     .then(response => {\r\n  //       return response.json();\r\n  //     },\r\n  //     error => {\r\n  //       this.setState({\r\n  //         isLoaded: true,\r\n  //         error\r\n  //       });\r\n  //     })\r\n  //     .then(JsonResponse => {\r\n  //       this.setState({\r\n  //         isLoaded: true,\r\n  //         response: JsonResponse\r\n  //       })\r\n  //     })\r\n  // }\r\n\r\n  render(){\r\n    const {error, isLoaded, response} = this.state;\r\n\r\n    // if (error){\r\n    //   return <h1>Error: {error.message}</h1>\r\n    // }\r\n    // else if (!isLoaded){\r\n    //   return <div className='text-center'><div className=\"spinner-border text-info\"></div></div>\r\n    // }\r\n    // else{\r\n      return (\r\n        <Router>\r\n          <div>\r\n            <h1 className='text-center display-4'>Week weather forecast</h1>\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">City, date and time</span>\r\n              </div>\r\n              <input type=\"text\" aria-label=\"city\" className=\"form-control\" onChange={(e) => this.setState({city: e.target.value})}/>\r\n              <input type=\"text\" aria-label=\"date\" className=\"form-control\" onChange={(e) => this.setState({date: e.target.value})}/>\r\n              <input type=\"text\" aria-label=\"time\" className=\"form-control\" onChange={(e) => this.setState({time: e.target.value})}/>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary btn-block mt-4\" onClick={this.handleClick}>Find!</button>\r\n            {this.state.response && \r\n              <Route path=\"/\" exact render={() => <Index data={response} />} />\r\n            }\r\n          </div>\r\n        </Router>\r\n      )\r\n    }\r\n  // }\r\n}"]},"metadata":{},"sourceType":"module"}