{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SpiderQshka\\\\Documents\\\\GitHub\\\\ReactProject\\\\react-project\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Card from './Card';\nimport Index from './Index';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      response: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://api.openweathermap.org/data/2.5/forecast?q=Minsk&APPID=6132c3489f0e8f14f8be55cd68ff7506').then(response => {\n      return response.json();\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    }).then(JsonResponse => {\n      this.setState({\n        isLoaded: true,\n        response: JsonResponse\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          response = _this$state.response;\n\n    if (error) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Loading..\");\n    } else {\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-group list-group-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"list-group-item list-group-item-action list-group-item-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"show them all!\"), React.createElement(Link, {\n        to: \"/monday/\",\n        className: \"list-group-item list-group-item-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"monday\"), React.createElement(Link, {\n        to: \"/tuesday/\",\n        className: \"list-group-item list-group-item-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"tuesday\"), React.createElement(Link, {\n        to: \"/wednesday/\",\n        className: \"list-group-item list-group-item-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"wednesday\"), React.createElement(Link, {\n        to: \"/thursday/\",\n        className: \"list-group-item list-group-item-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"thursday\"), React.createElement(Link, {\n        to: \"/friday/\",\n        className: \"list-group-item list-group-item-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"friday\"))), React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        render: () => React.createElement(Index, {\n          data: response,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:day(\\\\w+)/\",\n        exact: true,\n        render: respone => React.createElement(Card, {\n          data: response,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\SpiderQshka\\Documents\\GitHub\\ReactProject\\react-project\\src\\components\\App.js"],"names":["React","BrowserRouter","Router","Route","Link","Card","Index","App","Component","constructor","props","state","error","isLoaded","response","componentDidMount","fetch","then","json","setState","JsonResponse","render","message","respone"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Card from './Card';\r\nimport Index from './Index';\r\n\r\nexport default class App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      response: null\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('http://api.openweathermap.org/data/2.5/forecast?q=Minsk&APPID=6132c3489f0e8f14f8be55cd68ff7506')\r\n      .then(response => {\r\n        return response.json();\r\n      },\r\n      error => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n      })\r\n      .then(JsonResponse => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          response: JsonResponse\r\n        })\r\n      })\r\n  }\r\n\r\n  render(){\r\n    const {error, isLoaded, response} = this.state;\r\n\r\n    if (error){\r\n      return <h1>Error: {error.message}</h1>\r\n    }\r\n    else if (!isLoaded){\r\n      return <h1 className='text-center'>Loading..</h1>\r\n    }\r\n    else{\r\n      return (\r\n        <Router>\r\n          <div>\r\n            <nav>\r\n              <ul className='list-group list-group-horizontal'>\r\n                <Link to=\"/\" className='list-group-item list-group-item-action list-group-item-primary'>show them all!</Link>\r\n                <Link to=\"/monday/\" className='list-group-item list-group-item-action'>monday</Link>\r\n                <Link to=\"/tuesday/\" className='list-group-item list-group-item-action'>tuesday</Link>\r\n                <Link to=\"/wednesday/\" className='list-group-item list-group-item-action'>wednesday</Link>\r\n                <Link to=\"/thursday/\" className='list-group-item list-group-item-action'>thursday</Link>\r\n                <Link to=\"/friday/\" className='list-group-item list-group-item-action'>friday</Link>\r\n              </ul>\r\n            </nav>\r\n\r\n            <Route path=\"/\" exact render={() => <Index data={response} />} />\r\n            <Route path=\"/:day(\\w+)/\" exact render={respone => <Card data={response} />} />\r\n          </div>\r\n        </Router>      \r\n      )\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}