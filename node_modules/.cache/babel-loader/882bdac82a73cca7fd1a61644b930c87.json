{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SpiderQshka\\\\Documents\\\\GitHub\\\\ReactProject\\\\react-project\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Card from './Card';\nimport sun from '../images/sun.png'; // import rain from '../images/rain.png';\n\nconst currentWeather = {\n  wheatherImage: sun,\n  dayTemperature: '20℃',\n  nightTemperature: '15℃'\n};\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      response: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://api.openweathermap.org/data/2.5/forecast?q=Minsk&APPID=6132c3489f0e8f14f8be55cd68ff7506').then(response => {\n      this.setState({\n        isLoaded: true,\n        response: response.json()\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    function Index() {\n      return React.createElement(\"div\", {\n        className: \"card-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Card, {\n        currentWeather: null,\n        day: \"Monday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Card, {\n        currentWeather: null,\n        day: \"Tuesday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Card, {\n        currentWeather: null,\n        day: \"Wednesday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Card, {\n        currentWeather: null,\n        day: \"Thursday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Card, {\n        currentWeather: null,\n        day: \"Friday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n\n    function Day(props) {\n      return React.createElement(Card, {\n        currentWeather: currentWeather,\n        day: props.match.params.day,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }\n\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          response = _this$state.response;\n\n    if (error) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Loading..\");\n    } else {\n      console.log(this.state);\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-group list-group-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"list-group-item list-group-item-action list-group-item-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"show them all!\"), React.createElement(Link, {\n        to: \"/monday/\",\n        className: \"list-group-item list-group-item-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"monday\"), React.createElement(Link, {\n        to: \"/tuesday/\",\n        className: \"list-group-item list-group-item-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"tuesday\"), React.createElement(Link, {\n        to: \"/wednesday/\",\n        className: \"list-group-item list-group-item-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"wednesday\"), React.createElement(Link, {\n        to: \"/thursday/\",\n        className: \"list-group-item list-group-item-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"thursday\"), React.createElement(Link, {\n        to: \"/friday/\",\n        className: \"list-group-item list-group-item-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"friday\"))), React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: Index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:day(\\\\w+)/\",\n        component: Day,\n        exact: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\SpiderQshka\\Documents\\GitHub\\ReactProject\\react-project\\src\\components\\App.js"],"names":["React","BrowserRouter","Router","Route","Link","Card","sun","currentWeather","wheatherImage","dayTemperature","nightTemperature","App","Component","constructor","props","state","error","isLoaded","response","componentDidMount","fetch","then","setState","json","render","Index","Day","match","params","day","message","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Card from './Card';\r\nimport sun from '../images/sun.png';\r\n// import rain from '../images/rain.png';\r\n\r\nconst currentWeather = {\r\n  wheatherImage: sun,\r\n  dayTemperature: '20℃',\r\n  nightTemperature: '15℃'\r\n}\r\n\r\n\r\n\r\nexport default class App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      response: null\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('http://api.openweathermap.org/data/2.5/forecast?q=Minsk&APPID=6132c3489f0e8f14f8be55cd68ff7506')\r\n      .then(response => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          response: response.json()\r\n        })\r\n      },\r\n      error => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n      });\r\n  }\r\n\r\n  render(){\r\n    function Index() {\r\n      return (\r\n        <div className='card-group'>\r\n          <Card currentWeather={null} day='Monday'/>\r\n          <Card currentWeather={null} day='Tuesday'/>\r\n          <Card currentWeather={null} day='Wednesday'/>\r\n          <Card currentWeather={null} day='Thursday'/>\r\n          <Card currentWeather={null} day='Friday'/>\r\n        </div>\r\n      );\r\n    }\r\n    function Day(props){\r\n      return <Card currentWeather={currentWeather} day={props.match.params.day}/>\r\n    }\r\n    const {error, isLoaded, response} = this.state;\r\n    if (error){\r\n      return <h1>Error: {error.message}</h1>\r\n    }\r\n    else if (!isLoaded){\r\n      return <h1>Loading..</h1>\r\n    }\r\n    else{\r\n      console.log(this.state)\r\n      return (\r\n        <Router>\r\n          <div>\r\n            <nav>\r\n              <ul className='list-group list-group-horizontal'>\r\n                <Link to=\"/\" className='list-group-item list-group-item-action list-group-item-primary'>show them all!</Link>\r\n                <Link to=\"/monday/\" className='list-group-item list-group-item-action'>monday</Link>\r\n                <Link to=\"/tuesday/\" className='list-group-item list-group-item-action'>tuesday</Link>\r\n                <Link to=\"/wednesday/\" className='list-group-item list-group-item-action'>wednesday</Link>\r\n                <Link to=\"/thursday/\" className='list-group-item list-group-item-action'>thursday</Link>\r\n                <Link to=\"/friday/\" className='list-group-item list-group-item-action'>friday</Link>\r\n              </ul>\r\n            </nav>\r\n\r\n            <Route path=\"/\" exact component={Index} />\r\n            <Route path=\"/:day(\\w+)/\" component={Day} exact />\r\n          </div>\r\n        </Router>      \r\n      )\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}