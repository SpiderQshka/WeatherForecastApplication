{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SpiderQshka\\\\Documents\\\\GitHub\\\\ReactProject\\\\react-project\\\\src\\\\components\\\\Index.js\";\nimport React from 'react';\nimport Card from './Card';\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      response: null\n    };\n  }\n\n  compo() {\n    const _this$props$data = this.props.data,\n          city = _this$props$data.city,\n          date = _this$props$data.date,\n          time = _this$props$data.time;\n    const url = \"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&APPID=6132c3489f0e8f14f8be55cd68ff7506\");\n    fetch(url).then(response => {\n      return response.json();\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    }).then(JsonResponse => {\n      this.setState({\n        isLoaded: true,\n        response: JsonResponse\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          response = _this$state.response;\n\n    if (error) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"text-center m-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"spinner-border text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    } else if (response.cod !== '200') {\n      return React.createElement(\"h1\", {\n        className: \"text-center display-4 m-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Cod \", response.cod, \": \", response.message);\n    } else {\n      // const cards = response.list.map((item, i) => \n      //   <Card key={i} data={item} />\n      // )\n      // console.log(this.state)\n      return React.createElement(\"div\", {\n        className: \"card-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\SpiderQshka\\Documents\\GitHub\\ReactProject\\react-project\\src\\components\\Index.js"],"names":["React","Card","Index","Component","constructor","props","state","error","isLoaded","response","compo","data","city","date","time","url","fetch","then","json","setState","JsonResponse","render","message","cod"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAmC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AAEDC,EAAAA,KAAK,GAAE;AAAA,6BACsB,KAAKL,KAAL,CAAWM,IADjC;AAAA,UACEC,IADF,oBACEA,IADF;AAAA,UACQC,IADR,oBACQA,IADR;AAAA,UACcC,IADd,oBACcA,IADd;AAEL,UAAMC,GAAG,8DAAuDH,IAAvD,4CAAT;AAEAI,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQR,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACS,IAAT,EAAP;AACD,KAHH,EAIEX,KAAK,IAAI;AACP,WAAKY,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KATH,EAUGU,IAVH,CAUQG,YAAY,IAAI;AACpB,WAAKD,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,QAAQ,EAAEW;AAFE,OAAd;AAID,KAfH;AAgBD;;AAEDC,EAAAA,MAAM,GAAE;AAAA,wBAC8B,KAAKf,KADnC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBC,QADlB,eACkBA,QADlB;;AAGN,QAAIF,KAAJ,EAAU;AACR,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAYA,KAAK,CAACe,OAAlB,CAAP;AACD,KAFD,MAIK,IAAI,CAACd,QAAL,EAAc;AACjB,aAAO;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjC,CAAP;AACD,KAFI,MAIA,IAAIC,QAAQ,CAACc,GAAT,KAAiB,KAArB,EAA2B;AAC9B,aAAO;AAAI,QAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA+Cd,QAAQ,CAACc,GAAxD,QAA+Dd,QAAQ,CAACa,OAAxE,CAAP;AACD,KAFI,MAID;AACF;AACA;AACA;AACA;AACA,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD;AACF;;AA3D+C","sourcesContent":["import React from 'react';\r\nimport Card from './Card';\r\n\r\nexport default class Index extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      response: null\r\n    }\r\n  }\r\n\r\n  compo(){\r\n    const {city, date, time} = this.props.data;\r\n    const url = `http://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=6132c3489f0e8f14f8be55cd68ff7506`;\r\n\r\n    fetch(url)\r\n      .then(response => {\r\n        return response.json();\r\n      },\r\n      error => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        });\r\n      })\r\n      .then(JsonResponse => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          response: JsonResponse\r\n        })\r\n      })\r\n  }\r\n\r\n  render(){\r\n    const {error, isLoaded, response} = this.state;\r\n\r\n    if (error){\r\n      return <h1>Error: {error.message}</h1>\r\n    }\r\n\r\n    else if (!isLoaded){\r\n      return <div className='text-center m-4'><div className=\"spinner-border text-info\"></div></div>\r\n    }\r\n\r\n    else if (response.cod !== '200'){\r\n      return <h1 className='text-center display-4 m-4'>Cod {response.cod}: {response.message}</h1>\r\n    }\r\n\r\n    else{\r\n      // const cards = response.list.map((item, i) => \r\n      //   <Card key={i} data={item} />\r\n      // )\r\n      // console.log(this.state)\r\n      return (\r\n        <div className='card-group'>\r\n          {/* {cards} */}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n    \r\n  }"]},"metadata":{},"sourceType":"module"}